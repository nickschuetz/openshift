# This is an example of an OpenShift 3.x inventory file to be used in a basic POC environment

# Create an OSEv3 group that contains the masters and nodes groups
[OSEv3:children]
masters
etcd
nodes
glusterfs


# Set variables common for all OSEv3 hosts
[OSEv3:vars]

# Enable Tech Preview Operator Framework
openshift_enable_olm=true

# Disable installer health checks for non-prod environments
openshift_disable_check=disk_availability,memory_availability,docker_image_availability

## this is required otherwise it will fail openshift_sanitize_inventory
### cloud provider is not configured but dynamic is set
dynamic_volumes_check=False

# SSH user, this user should allow ssh based auth without requiring a
# password. If using ssh key based auth, then the key should be managed by an
# ssh agent.
ansible_ssh_user=root

# If ansible_ssh_user is not root, ansible_become must be set to true and the
# user must be configured for passwordless sudo
#ansible_become=yes

# Debug level for all OpenShift components (Defaults to 2)
#debug_level=3

# Specify the deployment type. Valid values are origin and openshift-enterprise.
openshift_deployment_type=openshift-enterprise

# Specify the generic release of OpenShift to install. This is used mainly just during installation, after which we
# rely on the version running on the first master. Works best for containerized installs where we can usually
# use this to lookup the latest exact version of the container images, which is the tag actually used to configure
# the cluster. For RPM installations we just verify the version detected in your configured repos matches this
# release.
openshift_release=v3.11
#openshift_image_tag=v3.11
oreg_url=registry.access.redhat.com/openshift3/ose-${component}:${version}
oreg_auth_user=''
oreg_auth_password=''
openshift_examples_modify_imagestreams=true

openshift_storage_glusterfs_image=registry.access.redhat.com/rhgs3/rhgs-server-rhel7:v3.11
openshift_storage_glusterfs_block_image=registry.access.redhat.com/rhgs3/rhgs-gluster-block-prov-rhel7:v3.11
openshift_storage_glusterfs_s3_image=registry.access.redhat.com/rhgs3/rhgs-s3-server-rhel7:v3.11
openshift_storage_glusterfs_heketi_image=registry.access.redhat.com/rhgs3/rhgs-volmanager-rhel7:v3.11

# htpasswd auth
openshift_master_identity_providers=[{'name': 'htpasswd_auth', 'login': 'true', 'challenge': 'true', 'kind': 'HTPasswdPasswordIdentityProvider'}]

# Enable cockpit
osm_use_cockpit=true
#
# Set cockpit plugins
osm_cockpit_plugins=['cockpit-kubernetes']

# Native high availability cluster method with optional load balancer.
# If no lb group is defined, the installer assumes that a load balancer has
# been preconfigured. For installation the value of
# openshift_master_cluster_hostname must resolve to the load balancer
# or to one or all of the masters defined in the inventory if no load
# balancer is present.
openshift_master_cluster_public_hostname=ocp.example.com

# default subdomain to use for exposed routes
openshift_master_default_subdomain=apps.example.com

# OpenShift Router Options
openshift_hosted_manage_router=true

# CNS Storage
openshift_storage_glusterfs_storageclass=true
openshift_storage_glusterfs_storageclass_default=true
openshift_storage_glusterfs_block_deploy=true
openshift_storage_glusterfs_block_host_vol_size=100
openshift_storage_glusterfs_block_storageclass=true
openshift_storage_glusterfs_block_storageclass_default=false
#openshift_storage_glusterfs_heketi_wipe=True
#openshift_storage_glusterfs_wipe=True

openshift_storageclass_default=false

# Openshift Registry Options
#
openshift_hosted_manage_registry=true
openshift_hosted_registry_storage_kind=glusterfs
openshift_hosted_registry_storage_volume_name=registry
openshift_hosted_registry_storage_volume_size=50Gi

# Metrics deployment
# See: https://docs.openshift.com/enterprise/latest/install_config/cluster_metrics.html

# metrics
openshift_metrics_install_metrics=true
openshift_metrics_storage_kind=dynamic
openshift_metrics_cassandra_storage_type=dynamic
openshift_metrics_storage_volume_size='25Gi'
openshift_metrics_cassandra_pvc_storage_class_name=glusterfs-storage-block
openshift_metrics_duration=7
openshift_metrics_cassandra_requests_memory=2G
openshift_metrics_hawkular_nodeselector={'node-role.kubernetes.io/infra':'true'}
openshift_metrics_heapster_nodeselector={'node-role.kubernetes.io/infra':'true'}
openshift_metrics_cassandra_nodeselector={'node-role.kubernetes.io/infra':'true'}

openshift_cluster_monitoring_operator_install=true
openshift_cluster_monitoring_operator_prometheus_storage_enabled=true
openshift_cluster_monitoring_operator_alertmanager_storage_enabled=true
openshift_cluster_monitoring_operator_prometheus_storage_capacity=15Gi
openshift_cluster_monitoring_operator_alertmanager_storage_capacity=15Gi
openshift_cluster_monitoring_operator_node_selector={'node-role.kubernetes.io/infra':'true'}

# Logging
openshift_logging_install_logging=true
openshift_logging_es_pvc_dynamic=true
openshift_logging_es_pvc_size=20Gi
openshift_logging_es_pvc_storage_class_name=glusterfs-storage-block
openshift_logging_curator_nodeselector={'node-role.kubernetes.io/compute':'true'}
openshift_logging_es_nodeselector={'node-role.kubernetes.io/compute':'true'}
openshift_logging_kibana_nodeselector={'node-role.kubernetes.io/compute':'true'}
openshift_logging_es_memory_limit=4G

# Configure the multi-tenant or networkpolicy SDN plugin (default is 'redhat/openshift-ovs-subnet')
# os_sdn_network_plugin_name='redhat/openshift-ovs-multitenant'
# os_sdn_network_plugin_name='redhat/openshift-ovs-networkpolicy'

# Configure SDN cluster network and kubernetes service CIDR blocks. These
# network blocks should be private and should not conflict with network blocks
# in your infrastructure that pods may require access to. Can not be changed
# after deployment.
#
# WARNING : Do not pick subnets that overlap with the default Docker bridge subnet of
# 172.17.0.0/16.  Your installation will fail and/or your configuration change will
# cause the Pod SDN or Cluster SDN to fail.
#
# WORKAROUND : If you must use an overlapping subnet, you can configure a non conflicting
# docker0 CIDR range by adding '--bip=192.168.2.1/24' to DOCKER_NETWORK_OPTIONS
# environment variable located in /etc/sysconfig/docker-network.
osm_cluster_network_cidr=10.128.0.0/14
openshift_portal_net=172.30.0.0/16

# Global Proxy Configuration
## These options configure HTTP_PROXY, HTTPS_PROXY, and NOPROXY environment
# variables for docker and master services.
#
# Hosts in the openshift_no_proxy list will NOT use any globally
# configured HTTP(S)_PROXYs. openshift_no_proxy accepts domains
# (.example.com), hosts (example.com), and IP addresses.
#openshift_http_proxy=http://USER:PASSWORD@IPADDR:PORT
#openshift_https_proxy=https://USER:PASSWORD@IPADDR:PORT
#openshift_no_proxy='.hosts.example.com,some-host.com'

# Ansible Service Broker
openshift_hosted_etcd_storage_kind=dynamic
openshift_hosted_etcd_storage_volume_name=etcd-vol2
openshift_hosted_etcd_storage_volume_size=10G
ansible_service_broker_local_registry_whitelist=['.*-apb$']

# Define your hosts here.
[masters]
ocp-master1.example.com openshift_schedulable=true

[etcd]
ocp-master1.example.com

# NOTE: Currently we require that masters be part of the SDN which require that they also be nodes
[nodes]
ocp-master1.example.com openshift_node_group_name='node-config-master-infra'
ocp-node[1:3].example.com openshift_node_group_name='node-config-compute'

# Nodes that have been added an extra volume for use by OpenShift Container Storage (OCS).
# NOTE: The glusterfs_ip should match that of the node in which the volume resides.
[glusterfs]
ocp-node1.example.com glusterfs_ip=192.168.0.42 glusterfs_devices='[ "/dev/vdc" ]'
ocp-node2.example.com glusterfs_ip=192.168.0.43 glusterfs_devices='[ "/dev/vdc" ]'
ocp-node3.example.com glusterfs_ip=192.168.0.44 glusterfs_devices='[ "/dev/vdc" ]'
